version: "3.8"
services:
  app:
    command: /bin/sh -c "sudo npm i && while sleep 1000; do :; done"
    build: ./batch-action
    working_dir: /app
    volumes:
      - ./batch-action:/app
      - node_modules:/app/node_modules
    environment:
      GID: 1000
      UID: 1000
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
      GRAPHQL_ENDPOINT: ${GRAPHQL_ENDPOINT}
    user: "1000:1000"
    tty: true
    depends_on:
      graphql-engine:
        condition: service_healthy
  web:
    command: /bin/bash -c "sudo yarn && yarn dev"
    build: ./manage
    working_dir: /app
    volumes:
      - ./manage:/app
      - web_nodemodules:/app/node_modules
    environment:
      GID: 1000
      UID: 1000
      GRAPHQL_ENDPOINT: ${GRAPHQL_ENDPOINT}
    user: "1000:1000"
    tty: true
    ports:
      - 3000:3000
      - 6006:6006
    depends_on:
      graphql-engine:
        condition: service_healthy
  tf:
    image: hashicorp/terraform:1.1.3
    working_dir: /workspace
    environment:
      HEROKU_API_KEY: ${HEROKU_API_KEY}
      HEROKU_EMAIL: ${HEROKU_EMAIL}
      TF_VAR_heroku_app_name: ${TF_VAR_heroku_app_name}
    volumes:
      - ./terraform:/workspace:cached
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
  graphql-engine:
    build: ./hasura
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
      - ./hasura/seeds:/hasura-seeds
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    healthcheck:
      test: curl -f http://localhost:8080/healthz || exit 1
      interval: 20s
      timeout: 80s
      retries: 10
      start_period: 120s
volumes:
  node_modules:
  web_nodemodules:
  db_data: